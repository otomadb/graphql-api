name: otomad-database-api-prod
version: "3.9"

services:
  api:
    build:
      context: ./.
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
      neo4j:
        condition: service_healthy
    environment:
      PRISMA_DATABASE_URL: "postgres://user:pass@postgres:5432/test"

      NEO4J_URL: "bolt://neo4j:7687"
      NEO4J_USERNAME: "neo4j"
      NEO4J_PASSWORD: "password"

      ENABLE_GRAPHIQL: "true"
      ENABLE_INTROSPECTION: "true"
    ports:
      - target: 8080
        published: 4000

  postgres:
    image: postgres:15@sha256:ea40a028dd42740d6cff34135ff6b3119ff7ce0ed60120d992216456b5987fe7
    healthcheck:
      test: pg_isready
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: test
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data

  # migration:
  #   build:
  #     context: ./.
  #     dockerfile: Dockerfile.migration
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     PRISMA_DATABASE_URL: "postgres://user:pass@postgres:5432/test"

  neo4j:
    image: neo4j:5.21@sha256:a6289df39dec768ca3ed5c2e403fe3b46042b1f13fe1761bdb146fe62db5eedd
    environment:
      NEO4J_AUTH: neo4j/password
    healthcheck:
      test: neo4j status || exit 1 # TODO:
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - type: volume
        source: neo4j_data
        target: /data
      - type: volume
        source: neo4j_logs
        target: /logs

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
